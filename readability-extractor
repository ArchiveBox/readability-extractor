#!/usr/bin/env node
/*
readability-extractor
MIT License
https://github.com/ArchiveBox/readability-extractor

Usage:
  ./readability-extractor ./archive/12345678910/singlefile.html > article.json
*/

const source_path = process.argv[2]                                                            // e.g. ./archive/12345678910/singlefile.html
const original_url = process.argv[3] || "https://example.com/unused-placeholder-url"           // e.g. https://exmaple.com/some/page.html

if (process.argv.includes("--version")) {
  const package_info = require('./package.json')
  console.log(package_info.version)   // e.g. 1.0.0
  process.exit(0)
}

function getArticle(dom) {
  const createDOMPurify = require('dompurify')
  const { Readability } = require('@mozilla/readability')

  const window = dom.window
  const html = dom.serialize()
  const DOMPurify = createDOMPurify(window)
  const clean = DOMPurify.sanitize(html)
  const doc = new JSDOM(clean, {url: original_url})
  
  const reader = new Readability(doc.window.document)
  return reader.parse()
}

const { JSDOM } = require('jsdom')

//Determine the charset 
//JSDOM uses the jsdom/html-encoding-sniffer library which implements the HTML standard sniffing algorithm.
//JSDOM.fromFile is more robust at detecting the charset than from a string: https://github.com/jsdom/jsdom#encoding-sniffing
JSDOM.fromFile(source_path).then(dom => {
  charset = dom.window.document.characterSet
  
  const article = getArticle(dom)
  article['content'] = `<meta charset="${charset}">\n` + article['content']
  console.log(JSON.stringify(article))
});

